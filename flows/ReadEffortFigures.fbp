# Parsing effort figures into CouchDB. This graph provides the
# following inports:
#
# * CONNECTION.IN: A CouchDB connection
# * EXECDOC.IN: receiver for execution documents
# * FILENAME.IN: spreadsheet filename to parse

'ParseSpreadsheet.fbp' -> GRAPH Reader(Graph)
'SaveIntoCouchDb.fbp' -> GRAPH Saver(Graph)

# Data filename
Filename(Split) OUT -> READ.SOURCE Reader()

# Execution document
ExecDoc(Split) OUT -> EXECDOC.IN Saver()
# Pass CouchDB settings
Connection(Split) OUT -> CONNECTION.IN Saver()

# Effort figures are contained in the second spreadsheet of the file
'1' -> GETSHEET.KEY Reader()

# We can skip some rows that contain unnecessary data
'2' -> SLICEROWS.BEGIN Reader()
'59' -> SLICEROWS.END Reader()

# The label of the row is contained in the third column
'2' -> GROUPBYROWLABEL.KEY Reader()

# After reading the label, remove three first columns, and everything after real data
'3' -> SLICECOLUMNS.BEGIN Reader()
'16' -> SLICECOLUMNS.END Reader()

# Get entities and split them to individual packets
Reader() ENTITIZE.OUT -> IN SplitEntities(SplitArray)

# Extract participants from data
'Partner' -> ACCEPT FilterPartners(FilterProperty)
'Country' -> ACCEPT FilterPartners()
# ...and map them to JSON-LD
'Partner=_id' -> MAP MapPartners(MapProperty)
'Country=foaf:country' -> MAP MapPartners()
'@type=organization' -> PROPERTY SetPartnerProps(SetProperty)
'_id=foaf:name' -> PROPERTY CopyPartnerProps(DuplicateProperty)

# Save partners into database
SplitEntities() OUT -> IN FilterPartners() OUT -> IN MapPartners() OUT -> IN SetPartnerProps() OUT -> IN CopyPartnerProps() OUT -> SAVE.IN Saver()

# Extract tasks from data
'(\d+\.\d+)\sTask\:(.+)' -> REGEXP FilterTasks(FilterProperty)
'1=name' -> MAP FlattenTasks(FlattenObject)
'@type=task' -> PROPERTY SetTaskProps(SetProperty)
'name=_id' -> PROPERTY CopyTaskProps(DuplicateProperty)
'_id=(\d+\.\d+)\sTask\:(.+)=http://iks-project.eu/task/$1' -> REGEXP MapTaskUri(MapPropertyValue)
'value' -> PROPERTY RemoveTaskProps(RemoveProperty)

# Save tasks into database
SplitEntities() OUT -> IN FilterTasks() OUT -> IN RemoveGroups(RemoveGroups) OUT -> IN SplitTasks(SplitArray) OUT -> IN CollectTasks(CollectGroups) OUT -> IN FlattenTasks() OUT -> IN CopyTaskProps() OUT -> IN MapTaskUri() OUT -> IN SetTaskProps() OUT -> IN RemoveTaskProps() OUT -> SAVE.IN Saver()

# Extract effort allocations from data
'Partner' -> KEY GroupByPartner(GroupByObjectKey)
'(\d+\.\d+)\sTask\:(.+)' -> REGEXP FilterAllocTasks(FilterProperty)
'0=task' -> MAP FlattenAllocTasks(FlattenObject)
'1=assignee' -> MAP FlattenAllocTasks()
'@type=effortallocation' -> PROPERTY SetAllocProps(SetProperty)
'(\d+\.\d+)\sTask\:(.+)=http://iks-project.eu/task/$1' -> REGEXP MapAllocTaskUri(MapPropertyValue)
'task=assignee=_id' -> PROPERTY CopyAllocProps(DuplicateProperty)

# Save effort allocations into database
SplitEntities() OUT -> IN RemoveSheet(RemoveGroups) OUT -> IN GroupByPartner() OUT -> IN FilterAllocTasks() OUT -> IN CollectAllocTasks(CollectGroups) OUT -> IN FlattenAllocTasks() OUT -> IN SetAllocProps() OUT -> IN MapAllocTaskUri() OUT -> IN CopyAllocProps() OUT -> SAVE.IN Saver()
