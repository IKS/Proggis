// Generated by CoffeeScript 1.3.1
(function() {
  var Proggis, _ref;

  Proggis = (_ref = window.Proggis) != null ? _ref : window.Proggis = {};

  Proggis.Info = {
    init: function() {
      var _this = this;
      Proggis.router.on('route:deliverableDoc', function(doc) {
        debugger;        return console.info('deliverablesDoc', doc);
      });
      Proggis.router.on("route:home", function() {
        return jQuery.get("_list/tables/execDocs", function(tableHtml) {
          jQuery("article .data").html(tableHtml);
          jQuery('.data table td.date').each(function() {
            jQuery(this).attr('title', jQuery(this).text());
            return jQuery(this).prettyDate();
          });
          return jQuery("article .data tr").click(function() {
            var id;
            id = jQuery(this).attr("about");
            return Proggis.router.navigate("execution/" + id + "/", true);
          });
        }, "text");
      });
      Proggis.router.on("route:deliverables", function() {
        var jqXhr;
        return jqXhr = jQuery.get("_list/tables/deliverablesByWbs", function(tableHtml) {
          jQuery("article .data").html(tableHtml);
          jQuery('.data table td.date').each(function() {
            jQuery(this).attr('title', jQuery(this).text());
            return jQuery(this).prettyDate();
          });
          jQuery('.deliverable tr[about]').each(function() {
            return jQuery(this).click(function() {
              var id, wbs;
              id = jQuery(this).attr('about');
              wbs = _(id.split('/')).last();
              return Proggis.router.navigate("deliverables/d/" + wbs + "/", true);
            });
          });
          return jQuery("article .data table").first().dataTable({
            bSort: true,
            bPaginate: false
          });
        }, "text");
      });
      Proggis.router.on("route:deliverablesTime", function(time) {
        var endTimeslot, jqXhr, startTimeslot, url;
        console.info('deliverablesTime', time);
        startTimeslot = time.split('.');
        endTimeslot = _.clone(startTimeslot);
        endTimeslot[endTimeslot.length - 1]++;
        url = "_list/tables/deliverablesByTime?startkey=[" + (startTimeslot.join(',')) + "]&endkey=[" + (endTimeslot.join(',')) + "]";
        return jqXhr = jQuery.get(url, function(tableHtml) {
          jQuery("article .data").html(tableHtml).find('table').first().dataTables();
          jQuery('.data table td.date').each(function() {
            jQuery(this).attr('title', jQuery(this).text());
            return jQuery(this).prettyDate();
          });
          jQuery('.deliverable tr[about]').each(function() {
            return jQuery(this).click(function() {
              var id, wbs;
              id = jQuery(this).attr('about');
              wbs = _(id.split('/')).last();
              return Proggis.router.navigate("deliverables/d/" + wbs + "/", true);
            });
          });
          return jQuery("article .data table").first().dataTable({
            bSort: true,
            bPaginate: false
          });
        }, "text");
      });
      return Proggis.router.on('all', function() {
        return jQuery("article .data").html("");
      });
    },
    showDocsByExecId: function(execId) {
      Proggis.db.openDoc(execId, {
        success: function(doc) {
          var tmpl;
          tmpl = "<div>\n    <p>The execution of the workflow <b>${workflow}</b> begun <b class=\"date\">${start}</b>\n    and ended <b class=\"date\">${start}</b>. The current state is <b>\"${state}\"</b>.</p>\n    <p>The imported data objects were the following:</p>\n    <button id=\"accept\">Accept</button>\n    <button id=\"decline\">Decline</button>\n<div>";
          Proggis.description.html("");
          jQuery(tmpl).tmpl(doc).appendTo(Proggis.description);
          jQuery(".date", Proggis.description).prettyDate();
          jQuery("button", Proggis.description).button();
          jQuery("#accept").click(function(e) {
            return console.log("accepted");
          });
          return jQuery("#decline").click(function(e) {
            return console.log("declined");
          });
        }
      });
      Proggis.viewName.html("Execution document");
      return jQuery.get("_list/tables/DocumentsByExecution?startkey=[\"" + execId + "\"]&endkey=[\"" + execId + "a\"]", function(tablesHtml) {
        jQuery('.graph').hide();
        if (tablesHtml.length) {
          return jQuery("article .data").html(tablesHtml);
        } else {
          return jQuery("article .data").html("<h1>No documents in the list</h1>");
        }
      }, "text");
    },
    showDeliverables: function() {}
  };

}).call(this);
